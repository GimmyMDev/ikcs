<?php
/**
 * @file
 * Allows users to configure custom meta tags.
 */

use Drupal\Core\Controller\ControllerBase;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Component\Utility\SafeMarkup;

/**
 * Ð¡ustom meta tags cache id.
 */
define('CUSTOM_META_TAGS_CID', 'custom_meta:tags');

/**
 * Implements hook_help().
 */
function custom_meta_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'custom_meta.admin_overview':
      $output = '';
      $output .= '<p>' . t('The Custom Meta module provides an interface for adding meta tags. This will add the created meta tags to the html head of all non-admin pages.') . '</p>';
      $output .= '<p>' . t('Be careful with the http-equiv meta attribute, these are added to <strong>ALL PAGES</strong>, so you could very easily break your site with redirects, expires, etc.') . '</p>';
      $output .= '<p>' . t('Formatting for tags <em>&lt;meta [Meta Attribute]="[Attribute Value]" content="[Content value]"&gt;</em>') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_page_attachments().
 */
function custom_meta_page_attachments(array &$page) {
  // Check if the current page is admin.
  if (\Drupal::service('router.admin_context')->isAdminRoute()) {
    return;
  }

  // Load custom meta tags.
  $meta_tags = \Drupal::service('custom_meta.meta_storage')->getCustomMetaTagsListing();

  if (!$meta_tags) {
    return;
  }

  $token_service = \Drupal::token();

  // Current user.
  $token_data['user'] = \Drupal::currentUser();

  // Current node.
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $token_data['node'] = $node;
  }

  // Current taxonomy term.
  if ($taxonomy_term = \Drupal::routeMatch()->getParameter('taxonomy_term')) {
    $token_data['taxonomy_term'] = $taxonomy_term;
  }

  foreach ($meta_tags as $meta_tag) {
    // Replace tokens in meta content.
    $meta_value = $token_service->replace($meta_tag->meta_attr_value, $token_data, ['clear' => TRUE]);
    $meta_content = $token_service->replace($meta_tag->meta_content, $token_data, ['clear' => TRUE]);

    // Attach custom meta tags.
    $custom_meta[] = array(
      '#tag' => 'meta',
      '#attributes' => array(
        $meta_tag->meta_attr => SafeMarkup::checkPlain($meta_value),
        'content' => SafeMarkup::checkPlain($meta_content),
      ),
    );
  }
  foreach ($custom_meta as $key => $value) {
    $page['#attached']['html_head'][] = [$value, $key];
  }
}
